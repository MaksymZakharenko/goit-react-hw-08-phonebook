{"version":3,"sources":["redux/auth/auth.operations.js","redux/auth/auth.actions.js","redux/auth/auth.reducer.js","redux/contacts/contacts.reducer.js","redux/store.js","components/UserMenu/Navigation.js","redux/auth/auth.selectors.js","components/UserMenu/fish.png","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/UserMenu/PrivateRoute.js","components/UserMenu/PublicRoute.js","App.js","index.js","redux/contacts/contacts.actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","login","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","window","location","reload","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","initialUserState","name","email","user","createReducer","_","payload","error","authReducer","combineReducers","loading","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","addNewContactsRequest","addNewContactsSuccess","addNewContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","items","action","state","filter","item","id","filterChange","todosReducer","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Navigation","to","exact","getIsAuthenticated","getUsername","mapDispatchToProps","onLogout","connect","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","isAuthenticated","Component","component","redirectTo","routeProps","render","props","console","log","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onGetCurrentUser","className","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cd858f9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth.actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error));\r\n  }\r\n};\r\n\r\nconst login = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch(logoutError(error));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"users/current\");\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error));\r\n  }\r\n};\r\n\r\nexport { register, login, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth.actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n\r\nexport { authReducer };\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contacts.actions\";\r\n\r\nconst loading = createReducer(false, {\r\n  [getAllContactsRequest]: () => true,\r\n  [getAllContactsSuccess]: () => false,\r\n  [getAllContactsError]: () => false,\r\n  [addNewContactsRequest]: () => true,\r\n  [addNewContactsSuccess]: () => false,\r\n  [addNewContactsError]: () => false,\r\n  [removeContactsRequest]: () => true,\r\n  [removeContactsSuccess]: () => false,\r\n  [removeContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\r\n  [removeContactsSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n });\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst todosReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default todosReducer;","import { getDefaultMiddleware, configureStore } from \"@reduxjs/toolkit\";\r\nimport { authReducer } from \"./auth/auth.reducer\";\r\nimport contactsReducer from \"./contacts/contacts.reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"]\r\n}\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <NavLink to=\"/\" exact>\r\n      Главная страница\r\n    </NavLink>\r\n    <NavLink to=\"/contacts\" exact>\r\n      Страница контактов\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","const getIsAuthenticated = (state) => state.auth.token;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUsername };\r\n","export default __webpack_public_path__ + \"static/media/fish.8582a620.png\";","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getUsername } from \"../../redux/auth/auth.selectors\";\r\nimport {logOut} from \"../../redux/auth/auth.operations\"\r\nimport defaultAvatar from \"./fish.png\"\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div>\r\n    <img src={avatar} alt=\"\" width=\"32\" />\r\n    <span>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: getUsername(state),\r\n    avatar: defaultAvatar\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact>\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact>\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react'\r\nimport Navigation from \"./Navigation\"\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { connect } from 'react-redux';\r\nimport {getIsAuthenticated} from \"../../redux/auth/auth.selectors\"\r\n\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu/> : <AuthNav/>}\r\n    </header>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\"\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth.selectors\"\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n \r\n    <Route {...routeProps}\r\n        \r\n        render={props => {\r\n            console.log(isAuthenticated);\r\n           return isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth.selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  restricted = false,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) => {\r\n      console.log(isAuthenticated);\r\n      return isAuthenticated && restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { Suspense, lazy, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch} from \"react-router-dom\";\nimport AppBar from \"./components/UserMenu/AppBar\";\nimport { getCurrentUser } from \"./redux/auth/auth.operations\";\nimport PrivateRoute from \"./components/UserMenu/PrivateRoute\";\nimport PublicRoute from \"./components/UserMenu/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView\" /* webpackChunkName: \"home-view\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /* webpackChunkName: \"register-view\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /* webpackChunkName: \"login-view\" */)\n);\nconst Contacts = lazy(() =>\n  import(\"./components/Contacts\" /* webpackChunkName: \"contacts-view\" */)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <div className=\"block\">\n        <AppBar />\n        <Suspense fallback={<p>Loading in progress...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              exact\n              restricted\n              path=\"/register\"\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              exact\n              restricted\n              path=\"/login\"\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              exact\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\r\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\r\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\r\n\r\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\r\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\r\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\r\n\r\nconst filterChange = createAction(\"contacts/filterChange\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\r\n\r\nexport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n};\r\n"],"sourceRoot":""}