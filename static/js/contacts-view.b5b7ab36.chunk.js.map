{"version":3,"sources":["components/Contacts.module.css","redux/contacts/contacts.operations.js","redux/contacts/contacts.selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","loadingSelector","state","contacts","loading","contactsFilterSelector","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","mapDispatchToProps","handleDelete","contactId","dispatch","a","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","connect","className","styles","ul","map","id","number","textContent","btn","type","onClick","handleChange","filterChange","block","title","input","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","addNewContacts","setState","onSubmit","preventDefault","this","getAllContacts","form","pattern","required","speener","color","height","width","timeout","Component","contact","addNewContactsRequest","post","data","addNewContactsSuccess","addNewContactsError","getAllContactsRequest","get","getAllContactsSuccess","getAllContactsError","Contacts","titleContact"],"mappings":"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","file":"static/js/contacts-view.b5b7ab36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__1PzMu\",\"titleContact\":\"Contacts_titleContact__1oIkv\",\"block\":\"Contacts_block__2bK7z\"};","import axios from \"axios\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./contacts.actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst addNewContacts = (contact) => async (dispatch) => {\r\n  dispatch(addNewContactsRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addNewContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactsError(error));\r\n  }\r\n};\r\n\r\nconst getAllContacts = () => async (dispatch) => {\r\n  dispatch(getAllContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getAllContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllContactsError(error));\r\n  }\r\n};\r\n\r\nconst removeContacts = (contactId) => async (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(removeContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\nexport { addNewContacts, getAllContacts, removeContacts };\r\n","\r\nimport { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadingSelector = (state) => state.contacts.loading;\r\nexport const contactsFilterSelector = (state) => state.contacts.filter;\r\nexport const contactsItemsSelector = (state) => state.contacts.items;\r\n  \r\nexport const filteredItemsSelector = createSelector([\r\n    contactsItemsSelector,\r\n    contactsFilterSelector,\r\n], (items, filter) => items.filter((item) =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContacts } from \"../../redux/contacts/contacts.operations\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { filteredItemsSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nconst ContactList = ({ items, handleDelete }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.textContent}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: filteredItemsSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: removeContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsFilterSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.block}>\r\n      <h2 className={styles.title}>Find contacts by name</h2>\r\n      <input\r\n        className={styles.input}\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: contactsFilterSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport {\r\n  addNewContacts,\r\n  getAllContacts,\r\n} from \"../../redux/contacts/contacts.operations\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { contactsItemsSelector, loadingSelector } from \"../../redux/contacts/contacts.selector\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getAllContacts();\r\n  }\r\n\r\n  handleSubmit = (name, number) => {\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.addNewContacts(newContact);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.onSubmit}>\r\n          <span className={styles.title}>Name</span>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <span className={styles.title}>Number</span>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <div className={styles.speener}>\r\n          {this.props.loading ? (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#00BFFF\"\r\n              height={50}\r\n              width={100}\r\n              timeout={3000} //3 secs\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsItemsSelector(state),\r\n    loading: loadingSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContacts,\r\n  getAllContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.titleContact}>Contacts</h2>\r\n      <div className={styles.block}>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__1qqkI\",\"btn\":\"ContactList_btn__1tmDo\",\"textContent\":\"ContactList_textContent__3pg42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__AatVd\",\"title\":\"Filter_title__1xVi2\",\"input\":\"Filter_input__1wqkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__SkhKS\",\"title\":\"ContactForm_title__aGvwK\",\"btn\":\"ContactForm_btn__29Fj5\",\"speener\":\"ContactForm_speener__3FlGg\"};"],"sourceRoot":""}